build:
  maxIssues: 0
  excludeCorrectable: false
  weights:
  # complexity: 2
  # LongParameterList: 1
  # style: 1
  # comments: 1

config:
  validation: true
  warningsAsErrors: false
  # when writing own rules with new properties, exclude the property path e.g.: 'my_rule_set,.*>.*>[my_property]'
  excludes: ''

processors:
  active: true
  exclude:
    - 'DetektProgressListener'
  # - 'KtFileCountProcessor'
  # - 'PackageCountProcessor'
  # - 'ClassCountProcessor'
  # - 'FunctionCountProcessor'
  # - 'PropertyCountProcessor'
  # - 'ProjectComplexityProcessor'
  # - 'ProjectCognitiveComplexityProcessor'
  # - 'ProjectLLOCProcessor'
  # - 'ProjectCLOCProcessor'
  # - 'ProjectLOCProcessor'
  # - 'ProjectSLOCProcessor'
  # - 'LicenseHeaderLoaderExtension'

console-reports:
  active: true
  exclude:
    - 'ProjectStatisticsReport'
    - 'ComplexityReport'
    - 'NotificationReport'
    #  - 'FindingsReport'
    - 'FileBasedFindingsReport'
    - 'LiteFindingsReport'

output-reports:
  active: true
  exclude: [ ]

comments:
  active: true
  AbsentOrWrongFileLicense:
    active: false
    licenseTemplateFile: 'license.template'
    licenseTemplateIsRegex: false
  CommentOverPrivateFunction:
    active: false
  CommentOverPrivateProperty:
    active: false
  DeprecatedBlockTag:
    active: false
  EndOfSentenceFormat:
    active: false
    endOfSentenceFormat: '([.?!][ \t\n\r\f<])|([.?!:]$)'
  UndocumentedPublicClass:
    active: false
    excludes: &testFolders
      - '**/test/**'
      - '**/androidTest/**'
      - '**/commonTest/**'
      - '**/jvmTest/**'
      - '**/jsTest/**'
      - '**/iosTest/**'
    searchInNestedClass: true
    searchInInnerClass: true
    searchInInnerObject: true
    searchInInnerInterface: true
  UndocumentedPublicFunction:
    active: false
    excludes: *testFolders
  UndocumentedPublicProperty:
    active: false
    excludes: *testFolders
  OutdatedDocumentation:
    active: false # Disabled until https://github.com/detekt/detekt/issues/4365 is resolved
    matchTypeParameters: false

complexity:
  active: true
  ComplexCondition:
    active: true
    threshold: 4
  ComplexInterface:
    active: true
    threshold: 10
    includeStaticDeclarations: false
    includePrivateDeclarations: false
  CyclomaticComplexMethod:
    active: true
    threshold: 15
    ignoreSingleWhenExpression: false
    ignoreSimpleWhenEntries: true
    ignoreNestingFunctions: false
    nestingFunctions:
      - 'also'
      - 'apply'
      - 'forEach'
      - 'isNotNull'
      - 'ifNull'
      - 'let'
      - 'run'
      - 'use'
      - 'with'
  LabeledExpression:
    active: false
    ignoredLabels: [ ]
  LargeClass:
    active: true
    threshold: 600
    # Tests often intentionally include large classes with many test methods. We can disable this check for tests
    excludes: *testFolders
  LongMethod:
    active: true
    threshold: 60
  LongParameterList:
    active: true
    functionThreshold: 6
    constructorThreshold: 7
    ignoreDefaultParameters: true
    ignoreDataClasses: true
    ignoreAnnotated: [ 'Inject', 'Provides', 'AssistedInject', 'Delete', 'Insert', 'Query', 'RawQuery', 'Update', 'Transaction', 'Composable' ]
  MethodOverloading:
    active: false
    threshold: 6
  NamedArguments:
    active: false
    threshold: 3
  NestedBlockDepth:
    active: false
    threshold: 4
    ignoreAnnotated: [ 'Composable' ]
  ReplaceSafeCallChainWithRun:
    active: false
  StringLiteralDuplication:
    active: false
    excludes: *testFolders
    threshold: 3
    ignoreAnnotation: true
    excludeStringsWithLessThan5Characters: true
    ignoreStringsRegex: '$^'
  TooManyFunctions:
    active: true
    excludes: *testFolders
    thresholdInFiles: 15
    thresholdInClasses: 15
    thresholdInInterfaces: 15
    thresholdInObjects: 15
    thresholdInEnums: 15
    ignoreDeprecated: true # We cannot remove those for backwards compatibility, so they must stay and be ignored
    ignorePrivate: false
    ignoreOverridden: true # We are forced to override those

coroutines:
  active: true
  GlobalCoroutineUsage:
    active: false
  InjectDispatcher:
    active: true
    excludes: *testFolders
  RedundantSuspendModifier:
    active: false
  SleepInsteadOfDelay:
    active: false
  SuspendFunWithFlowReturnType:
    active: false

empty-blocks:
  active: true
  EmptyCatchBlock:
    active: true
    allowedExceptionNameRegex: '_|(ignore|expected).*'
  EmptyClassBlock:
    active: true
  EmptyDefaultConstructor:
    active: true
  EmptyDoWhileBlock:
    active: true
  EmptyElseBlock:
    active: true
  EmptyFinallyBlock:
    active: true
  EmptyForBlock:
    active: true
  EmptyFunctionBlock:
    active: true
    ignoreOverridden: true
  EmptyIfBlock:
    active: true
  EmptyInitBlock:
    active: true
  EmptyKtFile:
    active: true
  EmptySecondaryConstructor:
    active: true
  EmptyTryBlock:
    active: true
  EmptyWhenBlock:
    active: true
  EmptyWhileBlock:
    active: true

exceptions:
  active: true
  ExceptionRaisedInUnexpectedLocation:
    active: true
    methodNames:
      - 'equals'
      - 'finalize'
      - 'hashCode'
      - 'toString'
  InstanceOfCheckForException:
    active: false
    excludes: *testFolders
  NotImplementedDeclaration:
    active: true
  ObjectExtendsThrowable:
    active: false
  PrintStackTrace:
    active: true
  RethrowCaughtException:
    active: true
  ReturnFromFinally:
    active: true
    ignoreLabeled: false
  SwallowedException:
    active: true
    ignoredExceptionTypes:
      - 'InterruptedException'
      - 'MalformedURLException'
      - 'NumberFormatException'
      - 'ParseException'
      - 'CancelledException'
    allowedExceptionNameRegex: '_|(ignore|expected).*'
  ThrowingExceptionFromFinally:
    active: true
  ThrowingExceptionInMain:
    active: false
  ThrowingExceptionsWithoutMessageOrCause:
    active: true
    excludes: *testFolders
    exceptions:
      - 'ArrayIndexOutOfBoundsException'
      - 'Exception'
      - 'IllegalArgumentException'
      - 'IllegalMonitorStateException'
      - 'IllegalStateException'
      - 'IndexOutOfBoundsException'
      - 'NullPointerException'
      - 'RuntimeException'
      - 'Throwable'
  ThrowingNewInstanceOfSameException:
    active: true
  TooGenericExceptionCaught:
    active: false
    excludes: *testFolders
    exceptionNames:
      - 'ArrayIndexOutOfBoundsException'
      - 'Error'
      - 'Exception'
      - 'IllegalMonitorStateException'
      - 'IndexOutOfBoundsException'
      - 'NullPointerException'
      - 'RuntimeException'
      - 'Throwable'
    allowedExceptionNameRegex: '_|(ignore|expected).*'
  TooGenericExceptionThrown:
    active: true
    exceptionNames:
      - 'Error'
      - 'Exception'
      - 'RuntimeException'
      - 'Throwable'

formatting:
  active: true
  android: true
  autoCorrect: false
  AnnotationOnSeparateLine:
    active: true
    autoCorrect: false
  AnnotationSpacing:
    active: true
    autoCorrect: false
  ArgumentListWrapping:
    active: true
    autoCorrect: false
    indentSize: 3
    maxLineLength: 130
  ChainWrapping:
    active: true
    autoCorrect: false
  CommentSpacing:
    active: true
    autoCorrect: false
  EnumEntryNameCase:
    active: true
    autoCorrect: false
  Filename:
    active: true
  FinalNewline:
    active: true
    autoCorrect: false
    insertFinalNewLine: true
  ImportOrdering:
    active: false
    autoCorrect: false
    layout: '*,java.**,javax.**,kotlin.**,^'
  Indentation:
    active: true
    autoCorrect: false
    indentSize: 3
  MaximumLineLength:
    active: false
    maxLineLength: 130
    ignoreBackTickedIdentifier: false
  ModifierOrdering:
    active: true
    autoCorrect: false
  MultiLineIfElse:
    active: true
    autoCorrect: false
  NoBlankLineBeforeRbrace:
    active: true
    autoCorrect: false
  NoConsecutiveBlankLines:
    active: true
    autoCorrect: false
  NoEmptyClassBody:
    active: true
    autoCorrect: false
  NoEmptyFirstLineInMethodBlock:
    active: true
    autoCorrect: false
  NoLineBreakAfterElse:
    active: true
    autoCorrect: false
  NoLineBreakBeforeAssignment:
    active: true
    autoCorrect: false
  NoMultipleSpaces:
    active: true
    autoCorrect: false
  NoSemicolons:
    active: true
    autoCorrect: false
  NoTrailingSpaces:
    active: true
    autoCorrect: false
  NoUnitReturn:
    active: true
    autoCorrect: false
  NoUnusedImports:
    active: true
    autoCorrect: false
  NoWildcardImports:
    active: true
  PackageName:
    active: true
    autoCorrect: false
  ParameterListWrapping:
    active: true
    autoCorrect: false
    maxLineLength: 130
  SpacingAroundAngleBrackets:
    active: true
    autoCorrect: false
  SpacingAroundColon:
    active: true
    autoCorrect: false
  SpacingAroundComma:
    active: true
    autoCorrect: false
  SpacingAroundCurly:
    active: true
    autoCorrect: false
  SpacingAroundDot:
    active: true
    autoCorrect: false
  SpacingAroundDoubleColon:
    active: true
    autoCorrect: false
  SpacingAroundKeyword:
    active: true
    autoCorrect: false
  SpacingAroundOperators:
    active: true
    autoCorrect: false
  SpacingAroundParens:
    active: true
    autoCorrect: false
  SpacingAroundRangeOperator:
    active: true
    autoCorrect: false
  SpacingAroundUnaryOperator:
    active: true
    autoCorrect: false
  SpacingBetweenDeclarationsWithAnnotations:
    active: true
    autoCorrect: false
  SpacingBetweenDeclarationsWithComments:
    active: true
    autoCorrect: false
  StringTemplate:
    active: true
    autoCorrect: false

naming:
  active: true
  BooleanPropertyNaming:
    active: false
    excludes: *testFolders
    allowedPattern: '^(is|has|are)'
  ClassNaming:
    active: true
    classPattern: '[A-Z][a-zA-Z0-9]*'
  ConstructorParameterNaming:
    active: true
    parameterPattern: '[a-z][A-Za-z0-9]*'
    privateParameterPattern: '[a-z][A-Za-z0-9]*'
    excludeClassPattern: '$^'
    ignoreOverridden: true
  EnumNaming:
    active: true
    enumEntryPattern: '[A-Z][_a-zA-Z0-9]*'
  ForbiddenClassName:
    active: false
    excludes: *testFolders
    forbiddenName: [ ]
  FunctionMaxLength:
    active: false
    excludes: *testFolders
    maximumFunctionNameLength: 30
  FunctionMinLength:
    active: false
    excludes: *testFolders
    minimumFunctionNameLength: 3
  FunctionNaming:
    active: false
    excludes: *testFolders
    functionPattern: '([a-z][a-zA-Z0-9]*)|(`.*`)'
    excludeClassPattern: '$^'
    ignoreOverridden: true
    ignoreAnnotated: [ 'Composable' ]
  FunctionParameterNaming:
    active: true
    parameterPattern: '[a-z][A-Za-z0-9]*'
    excludeClassPattern: '$^'
    ignoreOverridden: true
  InvalidPackageDeclaration:
    active: true
    excludes: [ '**/*.kts' ]
    rootPackage: ''
  MatchingDeclarationName:
    active: false
    mustBeFirst: true
  MemberNameEqualsClassName:
    active: true
    ignoreOverridden: true
  NoNameShadowing:
    active: true
  NonBooleanPropertyPrefixedWithIs:
    active: false
    excludes: *testFolders
  ObjectPropertyNaming:
    active: true
    constantPattern: '[A-Za-z][_A-Za-z0-9]*'
    propertyPattern: '[A-Za-z][_A-Za-z0-9]*'
    privatePropertyPattern: '(_)?[A-Za-z][_A-Za-z0-9]*'
  PackageNaming:
    active: true
    packagePattern: '[a-z]+(\.[a-z][A-Za-z0-9]*)*'
  TopLevelPropertyNaming:
    active: true
    constantPattern: '_?[A-Za-z][_A-Za-z0-9]*'
    propertyPattern: '[A-Za-z][_A-Za-z0-9]*'
    privatePropertyPattern: '_?[A-Za-z][_A-Za-z0-9]*'
  VariableMaxLength:
    active: false
    excludes: *testFolders
    maximumVariableNameLength: 64
  VariableMinLength:
    active: false
    excludes: *testFolders
    minimumVariableNameLength: 1
  VariableNaming:
    active: true
    variablePattern: '[a-z][A-Za-z0-9]*'
    privateVariablePattern: '(_)?[a-z][A-Za-z0-9]*'
    excludeClassPattern: '$^'
    ignoreOverridden: true

performance:
  active: true
  ArrayPrimitive:
    active: true
  ForEachOnRange:
    active: true
    excludes: *testFolders
  SpreadOperator:
    active: false
    excludes: *testFolders
  UnnecessaryTemporaryInstantiation:
    active: true

potential-bugs:
  active: true
  AvoidReferentialEquality:
    active: false
    forbiddenTypePatterns:
      - 'kotlin.String'
  CastToNullableType:
    active: false
  Deprecation:
    active: false
  DontDowncastCollectionTypes:
    active: true
  DoubleMutabilityForCollection:
    active: true
  EqualsAlwaysReturnsTrueOrFalse:
    active: true
  EqualsWithHashCodeExist:
    active: true
  ExitOutsideMain:
    active: false
  ExplicitGarbageCollectionCall:
    active: true
  HasPlatformType:
    active: false
  IgnoredReturnValue:
    active: false
    restrictToConfig: true
    returnValueAnnotations:
      - '*.CheckResult'
      - '*.CheckReturnValue'
    ignoreReturnValueAnnotations:
      - '*.CanIgnoreReturnValue'
  ImplicitDefaultLocale:
    active: true
  ImplicitUnitReturnType:
    active: false
    allowExplicitReturnType: true
  InvalidRange:
    active: true
  IteratorHasNextCallsNextMethod:
    active: true
  IteratorNotThrowingNoSuchElementException:
    active: true
  LateinitUsage:
    active: false
    excludes: *testFolders
    ignoreOnClassesPattern: ''
  MapGetWithNotNullAssertionOperator:
    active: false
  MissingPackageDeclaration:
    active: true
  NullableToStringCall:
    active: true
  UnconditionalJumpStatementInLoop:
    active: false
  UnnecessaryNotNullOperator:
    active: true
  UnnecessarySafeCall:
    active: true
  UnreachableCatchBlock:
    active: true
  UnreachableCode:
    # Disabled until https://github.com/detekt/detekt/issues/5186 is resolved
    active: false
  UnsafeCallOnNullableType:
    active: true
    excludes: *testFolders
  UnsafeCast:
    active: true
  UnusedUnaryOperator:
    active: false
  UselessPostfixExpression:
    active: false
  WrongEqualsTypeParameter:
    active: true

style:
  active: true
  ClassOrdering:
    active: false
  CollapsibleIfStatements:
    active: true
  DataClassContainsFunctions:
    active: true
    conversionFunctionPrefix: [ 'to' ]
  DataClassShouldBeImmutable:
    active: true
  DestructuringDeclarationWithTooManyEntries:
    active: false
    maxDestructuringEntries: 3
  EqualsNullCall:
    active: true
  EqualsOnSignatureLine:
    active: false
  ExplicitCollectionElementAccessMethod:
    active: false
  ExplicitItLambdaParameter:
    active: false
  ExpressionBodySyntax:
    active: false
    includeLineWrapping: false
  ForbiddenComment:
    active: true
    values:
      - 'STOPSHIP:'
    allowedPatterns: ''
  ForbiddenImport:
    active: false
    imports: [ ]
    forbiddenPatterns: ''
  ForbiddenMethodCall:
    active: true
    methods:
      - value: 'kotlin.io.print'
        reason: "Use logcat for logging"
      - value: 'kotlin.io.println'
        reason: "Use logcat for logging"
  ForbiddenVoid:
    active: false
    ignoreOverridden: false
    ignoreUsageInGenerics: false
  FunctionOnlyReturningConstant:
    active: true
    ignoreOverridableFunction: true
    ignoreActualFunction: true
    ignoreAnnotated:
      - "Provides"
  LoopWithTooManyJumpStatements:
    active: true
    maxJumpCount: 1
  MagicNumber:
    active: true
    excludes: *testFolders
    ignoreNumbers:
      - '-1'
      - '0'
      - '1'
      - '2'
    ignoreHashCodeFunction: true
    ignorePropertyDeclaration: true
    ignoreLocalVariableDeclaration: false
    ignoreConstantDeclaration: true
    ignoreCompanionObjectPropertyDeclaration: true
    ignoreAnnotation: true
    ignoreNamedArgument: true
    ignoreEnums: true
    ignoreRanges: false
    ignoreExtensionFunctions: true
    ignoreAnnotated:
      - 'Preview'
  MandatoryBracesIfStatements:
    active: true
  MandatoryBracesLoops:
    active: true
  MaxLineLength:
    active: true
    maxLineLength: 130
    excludePackageStatements: true
    excludeImportStatements: true
    excludeCommentStatements: false
  MayBeConst:
    active: true
  ModifierOrder:
    active: true
  MultilineLambdaItParameter:
    active: false
  NestedClassesVisibility:
    active: true
  NewLineAtEndOfFile:
    active: true
  NoTabs:
    active: false
  ObjectLiteralToLambda:
    active: false
  OptionalAbstractKeyword:
    active: true
  OptionalUnit:
    active: false
  OptionalWhenBraces:
    active: false
  PreferToOverPairSyntax:
    active: false
  ProtectedMemberInFinalClass:
    active: true
  RedundantExplicitType:
    active: false
  RedundantHigherOrderMapUsage:
    active: true
  RedundantVisibilityModifierRule:
    active: false
  ReturnCount:
    active: false # This rule prevents us from using guard clauses after mapping data in the method
    max: 3
    excludedFunctions: [ 'equals' ]
    excludeLabeled: false
    excludeReturnFromLambda: true
    excludeGuardClauses: true
  SafeCast:
    active: true
  SerialVersionUIDInSerializableClass:
    active: true
  SpacingBetweenPackageAndImports:
    active: false
  ThrowsCount:
    active: true
    max: 3
    excludeGuardClauses: true
  TrailingWhitespace:
    active: false
  UnderscoresInNumericLiterals:
    active: true
  UnnecessaryAbstractClass:
    active: false # Disabled until https://github.com/detekt/detekt/issues/5778 is resolved
    ignoreAnnotated: [ 'Module', 'Component' ]
  UnnecessaryAnnotationUseSiteTarget:
    active: false
  UnnecessaryApply:
    active: false
  UnnecessaryFilter:
    active: true
  UnnecessaryInheritance:
    active: true
  UnnecessaryLet:
    active: false # Disabled due to https://github.com/detekt/detekt/issues/5701
  UnnecessaryParentheses:
    active: false # This rule can make precedence of operators confusing since we are prevented from inserting clarifying parentheses
  UntilInsteadOfRangeTo:
    active: false
  UnusedImports:
    active: false
  UnusedPrivateClass:
    active: true
  UnusedPrivateMember:
    active: true
    allowedNames: '(_|ignored|expected|serialVersionUID)'
    ignoreAnnotated: [ 'Preview' ]
  UseArrayLiteralsInAnnotations:
    active: false
  UseCheckNotNull:
    active: false
  UseCheckOrError:
    active: true
  UseDataClass:
    active: false
    allowVars: false
  UseEmptyCounterpart:
    active: true
  UseIfEmptyOrIfBlank:
    active: true
  UseIfInsteadOfWhen:
    active: false
  UseIsNullOrEmpty:
    active: false
  UseOrEmpty:
    active: false
  UseRequire:
    active: true
  UseRequireNotNull:
    active: false
  UselessCallOnNotNull:
    active: true
  UtilityClassWithPublicConstructor:
    active: true
  VarCouldBeVal:
    active: true
  WildcardImport:
    active: true
