[versions]
androidGradlePlugin = "7.4.0"
androidGradleCacheFix = "2.7.0"
androidx-activity = "1.7.0"
androidx-compose-compiler = "1.4.1"
androidx-compose-material3 = "1.0.1"
androidx-compose-runtime = "1.4.0"
androidx-core = "1.9.0"
androidx-fragment = "1.5.6"
androidx-lifecycle = "2.6.1"
androidx-test-espresso = "3.5.1"
autoService = "1.0"
coil = "2.3.0"
dokka = "1.8.10"
espresso = "3.5.1"
anvil = "2.4.4"
desugarJdkLibs = "2.0.2"
dagger = "2.45"
detekt = "1.22.0"
dispatch = "1.0.0-beta10"
okhttp = "4.10.0"
orgJson = "20230227"
kotlin = "1.8.0"
kotlin-coroutines = "1.7.0"
# Do not update kotest until https://github.com/kotest/kotest/issues/3407 fix is released
kotest = "5.6.2"
nexusPublish = "0.30.0"
junit4 = "4.13.2"
junit5 = "5.9.2"
moshi = "1.14.0"
retrofit = "2.9.0"
simpleStack = "2.8.0"
tomlj = "1.1.0"
turbine = "0.12.3"
versionsChecker = "0.44.0"

[libraries]
androidGradleCacheFix = { module = "org.gradle.android.cache-fix:org.gradle.android.cache-fix.gradle.plugin", version.ref = "androidGradleCacheFix" }
android-agp = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "androidx-compose-material3" }
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "androidx-compose-runtime" }
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidx-compose-runtime" }
androidx-compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics", version.ref = "androidx-compose-runtime" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-compose-runtime" }
androidx-compose-ui-util = { module = "androidx.compose.ui:ui-util", version.ref = "androidx-compose-runtime" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "androidx-compose-runtime" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-compose-runtime" }
androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-compose-runtime" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewModel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-test-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-test-espresso" }
autoService-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "autoService" }
autoService-compiler = { module = "com.google.auto.service:auto-service", version.ref = "autoService" }
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
anvil = { module = "com.squareup.anvil:gradle-plugin", version.ref = "anvil" }
anvil-api = { module = "com.squareup.anvil:compiler-api", version.ref = "anvil" }
anvil-utils = { module = "com.squareup.anvil:compiler-utils", version.ref = "anvil" }
dagger-runtime = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
desugarJdkLibs = { module = " com.android.tools:desugar_jdk_libs", version.ref = "desugarJdkLibs" }
detekt-plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
dispatch = { module = "com.rickbusarow.dispatch:dispatch-core", version.ref = "dispatch" }
dispatch-espresso = { module = "com.rickbusarow.dispatch:dispatch-android-espresso", version.ref = "dispatch" }
dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
espresso-idlingResource = { module = "androidx.test.espresso:espresso-idling-resource", version.ref = "espresso" }
junit4 = { module = "junit:junit", version.ref = "junit4" }
junit5-api = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5" }
junit5-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-mockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }
orgJson = { module = "org.json:json", version.ref = "orgJson" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
simpleStack = { module = "com.github.Zhuinden:simple-stack", version.ref = "simpleStack" }
tomlj = { module = "org.tomlj:tomlj", version.ref = "tomlj" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
versionsCheckerPlugin = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "versionsChecker" }

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
nexusPublish = { id = "io.codearte.nexus-staging", version.ref = "nexusPublish" }
