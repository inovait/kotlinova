/*
 * Copyright 2020 INOVA IT d.o.o.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

buildscript{
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.jacoco:org.jacoco.core:0.8.1'
    }
}


subprojects {
    configurations {
        ktlint
    }

    dependencies {
        ktlint "com.github.shyiko:ktlint:0.19.0"
    }

    task ktlint(type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        classpath = configurations.ktlint
        main = "com.github.shyiko.ktlint.Main"
        args "--android", "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml", "**/src/**/*.kt"
        // to generate report in checkstyle format prepend following args:
        // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
        // see https://github.com/shyiko/ktlint#usage for more
    }

    task ktlintFormat(type: JavaExec, group: "formatting") {
        description = "Fix Kotlin code style deviations."
        classpath = configurations.ktlint
        main = "com.github.shyiko.ktlint.Main"
        args "-F", "**/src/**/*.kt"
    }

    apply plugin: "jacoco"

    jacoco {
        toolVersion = '0.8.1'
    }

    tasks.withType(Test) {
        jacoco.includeNoLocationClasses = true
    }


    afterEvaluate {
        if (project.isAndroid()) {
            task jacocoTestReport(type: JacocoReport) {
                group = 'Verification'

                reports {
                    xml.enabled = true
                    html.enabled = true
                    //xml.destination = new File("${buildDir}/reports/tests/test")
                    //html.destination = new File("${buildDir}/reports/tests/test")
                }

                def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
                def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
                def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
                def mainSrc = "${project.projectDir}/src/main/java"

                sourceDirectories.setFrom(files([mainSrc]))
                classDirectories.setFrom(files([debugTree, kotlinDebugTree]))
                executionData.setFrom(files("${buildDir}/jacoco/testDebugUnitTest.exec"))
            }

            android {
                lintOptions {
                    lintConfig file('lint.xml')
                }
            }
        }
    }
}